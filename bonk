-- 基本服務與玩家
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

-- 儲存自定義名稱
local savedName = "catlyn"

-- 修改名稱標籤的函數
local function changeNametag()
    local playerName = LocalPlayer.Name
    local character = workspace:FindFirstChild(playerName)
    if character then
        local head = character:FindFirstChild("Head")
        if head then
            local nametagFolder = head:FindFirstChild("Nametag")
            if nametagFolder then
                local labels = nametagFolder:FindFirstChild("Labels")
                if labels then
                    local topLabel = labels:FindFirstChild("TopLabel")
                    if topLabel then
                        topLabel.Text = savedName
                    end
                end
            end
        end
    end
end

-- 初次執行修改名稱
changeNametag()

-- 監聽角色重生事件，重生後重新應用名稱
LocalPlayer.CharacterAdded:Connect(function(character)
    character:WaitForChild("Head", 10)
    wait(0.5)
    changeNametag()
end)

-- GUI 主體
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "MaolingHub"

-- 主框架樣式
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 450, 0, 350)
Frame.Position = UDim2.new(0.5, -225, 0.5, -175)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true

-- 添加漸層效果
local gradient = Instance.new("UIGradient", Frame)
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 35)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 35, 50))
}
gradient.Rotation = 45

-- 添加外發光效果
local stroke = Instance.new("UIStroke", Frame)
stroke.Color = Color3.fromRGB(100, 150, 255)
stroke.Thickness = 2
stroke.Transparency = 0.5

Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 15)

-- 標題樣式
local Title = Instance.new("TextLabel", Frame)
Title.Size = UDim2.new(1, -80, 0, 50)
Title.Position = UDim2.new(0, 15, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "✨ 貓玲的腳本區 ✨BONK精通"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 22
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextXAlignment = Enum.TextXAlignment.Left

-- 添加標題發光效果
local titleStroke = Instance.new("UIStroke", Title)
titleStroke.Color = Color3.fromRGB(100, 150, 255)
titleStroke.Thickness = 1
titleStroke.Transparency = 0.3

-- 關閉按鈕樣式和功能
local Close = Instance.new("TextButton", Frame)
Close.Size = UDim2.new(0, 35, 0, 35)
Close.Position = UDim2.new(1, -40, 0, 8)
Close.Text = "x"
Close.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
Close.TextColor3 = Color3.fromRGB(255, 255, 255)
Close.Font = Enum.Font.GothamBold
Close.TextSize = 18
Close.BorderSizePixel = 0

-- 添加關閉按鈕效果
local closeGradient = Instance.new("UIGradient", Close)
closeGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(220, 60, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(180, 40, 40))
}

Instance.new("UICorner", Close).CornerRadius = UDim.new(0, 8)

-- 關閉按鈕功能
Close.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
    _G.maolingHubLoaded = false
end)

-- 最小化按鈕樣式
local Minimize = Instance.new("TextButton", Frame)
Minimize.Size = UDim2.new(0, 35, 0, 35)
Minimize.Position = UDim2.new(1, -80, 0, 8)
Minimize.Text = "─"
Minimize.BackgroundColor3 = Color3.fromRGB(100, 100, 120)
Minimize.TextColor3 = Color3.fromRGB(255, 255, 255)
Minimize.Font = Enum.Font.GothamBold
Minimize.TextSize = 16
Minimize.BorderSizePixel = 0

local minimizeGradient = Instance.new("UIGradient", Minimize)
minimizeGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 100, 120)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 80, 100))
}

Instance.new("UICorner", Minimize).CornerRadius = UDim.new(0, 8)

-- 側邊欄為可滾動
local SideBar = Instance.new("ScrollingFrame", Frame)
SideBar.Size = UDim2.new(0, 130, 1, -55)
SideBar.Position = UDim2.new(0, 5, 0, 50)
SideBar.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
SideBar.BorderSizePixel = 0
SideBar.ScrollBarThickness = 6
SideBar.CanvasSize = UDim2.new(0, 0, 0, 200)
SideBar.AutomaticCanvasSize = Enum.AutomaticSize.Y
SideBar.ScrollingDirection = Enum.ScrollingDirection.Y

-- 添加側邊欄樣式
local sidebarGradient = Instance.new("UIGradient", SideBar)
sidebarGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 35, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(45, 45, 65))
}

Instance.new("UICorner", SideBar).CornerRadius = UDim.new(0, 10)

-- 添加UIListLayout到側邊欄
local sidebarLayout = Instance.new("UIListLayout", SideBar)
sidebarLayout.Padding = UDim.new(0, 8)
sidebarLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

-- 內容區域
local Content = Instance.new("Frame", Frame)
Content.Size = UDim2.new(1, -145, 1, -55)
Content.Position = UDim2.new(0, 140, 0, 50)
Content.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
Content.BorderSizePixel = 0

local contentGradient = Instance.new("UIGradient", Content)
contentGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 75))
}

Instance.new("UICorner", Content).CornerRadius = UDim.new(0, 10)

-- 縮小功能的尺寸
local isMinimized = false
local fullSize = UDim2.new(0, 450, 0, 350)
local miniSize = UDim2.new(0, 450, 0, 50)

Minimize.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    SideBar.Visible = not isMinimized
    Content.Visible = not isMinimized
    Frame.Size = isMinimized and miniSize or fullSize
end)

-- 簡單高亮文字的分區按鈕樣式
local function createSectionButton(text, order, parent)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0, 120, 0, 45)
    btn.Text = text
    btn.BackgroundColor3 = Color3.fromRGB(85, 85, 105)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.TextTransparency = 0
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 16
    btn.BorderSizePixel = 0
    
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 10)
    
    local btnStroke = Instance.new("UIStroke", btn)
    btnStroke.Color = Color3.fromRGB(150, 180, 255)
    btnStroke.Thickness = 1
    btnStroke.Transparency = 0.6
    
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(105, 105, 125)
        btnStroke.Transparency = 0.3
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(85, 85, 105)
        btnStroke.Transparency = 0.6
    end)
    
    return btn
end

-- 簡單高亮文字的一般按鈕樣式
local function createButton(text, order, parent, spacing)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0, 180, 0, 35)
    btn.Position = UDim2.new(0.5, -90, 0, 10 + (order - 1) * spacing)
    btn.Text = text
    btn.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.TextSize = 16
    btn.Font = Enum.Font.GothamBold
    btn.BorderSizePixel = 0
    
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)
    
    local btnStroke = Instance.new("UIStroke", btn)
    btnStroke.Color = Color3.fromRGB(120, 170, 255)
    btnStroke.Thickness = 1
    btnStroke.Transparency = 0.6
    
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(100, 160, 240)
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btnStroke.Transparency = 0.3
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btnStroke.Transparency = 0.6
    end)
    
    return btn
end

-- 添加滾動框樣式改善
local function styleScrollFrame(scrollFrame)
    scrollFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 150, 255)
    
    local scrollGradient = Instance.new("UIGradient", scrollFrame)
    scrollGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 65)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(55, 55, 80))
    }
    
    Instance.new("UICorner", scrollFrame).CornerRadius = UDim.new(0, 8)
end

-- BONK分區腳本
local Section5 = createSectionButton("BONK", 1, SideBar)

-- 創建BONK分區的ScrollingFrame
local bonkSection = Instance.new("ScrollingFrame", Content)
bonkSection.Size = UDim2.new(1, 0, 1, 0)
bonkSection.CanvasSize = UDim2.new(0, 0, 0, 500)
bonkSection.ScrollBarThickness = 6
bonkSection.BackgroundTransparency = 1
bonkSection.Visible = true
bonkSection.AutomaticCanvasSize = Enum.AutomaticSize.Y
bonkSection.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
bonkSection.ScrollingDirection = Enum.ScrollingDirection.Y

styleScrollFrame(bonkSection)

-- BONK功能變數
local isBonkEnabled = false
local bonkLoop = nil
local bonkMode = "普通"
local savedPosition = nil
local savedCFrame = nil
local isHelpModeEnabled = false
local helpModeLoop = nil
local helpMode = "被打後重置"
local playerInput = nil
local isMovingLocked = false

-- 創建自動使用能力按鈕
local autoAbilityBtn = createButton("自動使用能力: 關", 1, bonkSection, 50)

-- 創建模式下拉選單
local modeDropdown = Instance.new("TextButton", bonkSection)
modeDropdown.Size = UDim2.new(0, 180, 0, 25)
modeDropdown.Position = UDim2.new(0.5, -90, 0, 55)
modeDropdown.Text = "模式: " .. bonkMode
modeDropdown.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
modeDropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
modeDropdown.TextSize = 14
modeDropdown.Font = Enum.Font.Gotham
modeDropdown.BorderSizePixel = 0
Instance.new("UICorner", modeDropdown).CornerRadius = UDim.new(0, 6)

-- 模式選項框架
local modeOptions = Instance.new("Frame", bonkSection)
modeOptions.Size = UDim2.new(0, 180, 0, 60)
modeOptions.Position = UDim2.new(0.5, -90, 0, 80)
modeOptions.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
modeOptions.BorderSizePixel = 0
modeOptions.Visible = false
Instance.new("UICorner", modeOptions).CornerRadius = UDim.new(0, 6)

-- 普通模式選項
local normalOption = Instance.new("TextButton", modeOptions)
normalOption.Size = UDim2.new(1, 0, 0.5, 0)
normalOption.Position = UDim2.new(0, 0, 0, 0)
normalOption.Text = "普通"
normalOption.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
normalOption.TextColor3 = Color3.fromRGB(255, 255, 255)
normalOption.TextSize = 12
normalOption.Font = Enum.Font.Gotham
normalOption.BorderSizePixel = 0

-- 槌後打模式選項
local hammerHitOption = Instance.new("TextButton", modeOptions)
hammerHitOption.Size = UDim2.new(1, 0, 0.5, 0)
hammerHitOption.Position = UDim2.new(0, 0, 0.5, 0)
hammerHitOption.Text = "槌後打"
hammerHitOption.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
hammerHitOption.TextColor3 = Color3.fromRGB(255, 255, 255)
hammerHitOption.TextSize = 12
hammerHitOption.Font = Enum.Font.Gotham
hammerHitOption.BorderSizePixel = 0

-- 下拉選單功能
modeDropdown.MouseButton1Click:Connect(function()
    modeOptions.Visible = not modeOptions.Visible
end)

normalOption.MouseButton1Click:Connect(function()
    bonkMode = "普通"
    modeDropdown.Text = "模式: " .. bonkMode
    modeOptions.Visible = false
end)

hammerHitOption.MouseButton1Click:Connect(function()
    bonkMode = "槌後打"
    modeDropdown.Text = "模式: " .. bonkMode
    modeOptions.Visible = false
end)

-- 修改後的自動使用能力按鈕功能
autoAbilityBtn.MouseButton1Click:Connect(function()
    isBonkEnabled = not isBonkEnabled
    autoAbilityBtn.Text = isBonkEnabled and "自動使用能力: 開" or "自動使用能力: 關"
    
    if isBonkEnabled then
        bonkLoop = task.spawn(function()
            while isBonkEnabled do
                if bonkMode == "普通" then
                    -- 普通模式：直接使用BONK能力
                    pcall(function()
                        game:GetService("ReplicatedStorage").BONK:FireServer()
                    end)
                    -- 等待12.5秒
                    task.wait(12.5)
                    
                elseif bonkMode == "槌後打" then
                    -- 槌後打模式：檢測15單位內有人才使用能力
                    local character = LocalPlayer.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local playerPosition = character.HumanoidRootPart.Position
                        local foundPlayer = false
                        local targetPlayer = nil
                        
                        -- 檢查15單位內是否有其他玩家
                        for _, player in pairs(Players:GetPlayers()) do
                            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                                local distance = (player.Character.HumanoidRootPart.Position - playerPosition).Magnitude
                                if distance <= 15 then
                                    foundPlayer = true
                                    targetPlayer = player
                                    
                                    -- 使用BONK能力
                                    pcall(function()
                                        game:GetService("ReplicatedStorage").BONK:FireServer()
                                    end)
                                    
                                    -- 等待0.5秒後普攻
                                    task.wait(0.5)
                                    pcall(function()
                                        local args = {
                                            [1] = player.Character:FindFirstChild("Torso")
                                        }
                                        if args[1] then
                                            game:GetService("ReplicatedStorage").GeneralHit:FireServer(unpack(args))
                                        end
                                    end)
                                    
                                    -- 等待12.5秒後再次檢測
                                    task.wait(12.5)
                                    break
                                end
                            end
                        end
                        
                        -- 如果沒有人在15單位內，等待0.5秒後再檢查
                        if not foundPlayer then
                            task.wait(0.5)
                        end
                    else
                        task.wait(0.5)
                    end
                end
            end
        end)
    elseif bonkLoop then
        task.cancel(bonkLoop)
        bonkLoop = nil
    end
end)

-- 創建幫助模式按鈕
local helpModeBtn = createButton("幫助模式: 關", 2, bonkSection, 50)
helpModeBtn.Position = UDim2.new(0.5, -90, 0, 160)

-- 創建玩家名稱輸入框
local playerInputFrame = Instance.new("Frame", bonkSection)
playerInputFrame.Size = UDim2.new(0, 180, 0, 25)
playerInputFrame.Position = UDim2.new(0.5, -90, 0, 205)
playerInputFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
playerInputFrame.BorderSizePixel = 0
Instance.new("UICorner", playerInputFrame).CornerRadius = UDim.new(0, 6)

-- 創建輸入框
local playerInput = Instance.new("TextBox", playerInputFrame)
playerInput.Size = UDim2.new(1, -10, 1, -4)
playerInput.Position = UDim2.new(0, 5, 0, 2)
playerInput.BackgroundTransparency = 1
playerInput.Text = "輸入玩家名稱"
playerInput.TextColor3 = Color3.fromRGB(200, 200, 200)
playerInput.TextSize = 12
playerInput.Font = Enum.Font.Gotham
playerInput.ClearTextOnFocus = true

-- 創建幫助模式下拉選單
local helpModeDropdown = Instance.new("TextButton", bonkSection)
helpModeDropdown.Size = UDim2.new(0, 180, 0, 25)
helpModeDropdown.Position = UDim2.new(0.5, -90, 0, 235)
helpModeDropdown.Text = "模式: " .. helpMode
helpModeDropdown.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
helpModeDropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
helpModeDropdown.TextSize = 14
helpModeDropdown.Font = Enum.Font.Gotham
helpModeDropdown.BorderSizePixel = 0
Instance.new("UICorner", helpModeDropdown).CornerRadius = UDim.new(0, 6)

-- 幫助模式選項框架
local helpModeOptions = Instance.new("Frame", bonkSection)
helpModeOptions.Size = UDim2.new(0, 180, 0, 80)
helpModeOptions.Position = UDim2.new(0.5, -90, 0, 260)
helpModeOptions.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
helpModeOptions.BorderSizePixel = 0
helpModeOptions.Visible = false
Instance.new("UICorner", helpModeOptions).CornerRadius = UDim.new(0, 6)

-- 被打後重置選項
local resetOption = Instance.new("TextButton", helpModeOptions)
resetOption.Size = UDim2.new(1, 0, 0.5, 0)
resetOption.Position = UDim2.new(0, 0, 0, 0)
resetOption.Text = "被打後重置"
resetOption.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
resetOption.TextColor3 = Color3.fromRGB(255, 255, 255)
resetOption.TextSize = 12
resetOption.Font = Enum.Font.Gotham
resetOption.BorderSizePixel = 0

-- 被打後不重置選項
local noResetOption = Instance.new("TextButton", helpModeOptions)
noResetOption.Size = UDim2.new(1, 0, 0.5, 0)
noResetOption.Position = UDim2.new(0, 0, 0.5, 0)
noResetOption.Text = "被打後不重置"
noResetOption.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
noResetOption.TextColor3 = Color3.fromRGB(255, 255, 255)
noResetOption.TextSize = 12
noResetOption.Font = Enum.Font.Gotham
noResetOption.BorderSizePixel = 0

-- 幫助模式下拉選單功能
helpModeDropdown.MouseButton1Click:Connect(function()
    helpModeOptions.Visible = not helpModeOptions.Visible
end)

resetOption.MouseButton1Click:Connect(function()
    helpMode = "被打後重置"
    helpModeDropdown.Text = "模式: " .. helpMode
    helpModeOptions.Visible = false
end)

noResetOption.MouseButton1Click:Connect(function()
    helpMode = "被打後不重置"
    helpModeDropdown.Text = "模式: " .. helpMode
    helpModeOptions.Visible = false
end)

-- 幫助模式功能
helpModeBtn.MouseButton1Click:Connect(function()
    isHelpModeEnabled = not isHelpModeEnabled
    helpModeBtn.Text = isHelpModeEnabled and "幫助模式: 開" or "幫助模式: 關"
    
    if isHelpModeEnabled then
        local targetName = playerInput.Text
        if targetName == "" or targetName == "輸入玩家名稱" then
            helpModeBtn.Text = "幫助模式: 關"
            isHelpModeEnabled = false
            return
        end
        
        helpModeLoop = task.spawn(function()
            while isHelpModeEnabled do
                local character = LocalPlayer.Character
                if not character then
                    character = LocalPlayer.CharacterAdded:Wait()
                end
                
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart", 10)
                local humanoid = character:WaitForChild("Humanoid", 10)
                
                if not humanoidRootPart or not humanoid then
                    task.wait(0.5)
                    continue
                end
                
                if humanoid.Health <= 0 then
                    task.wait(0.3)
                    continue
                end
                
                pcall(function()
                    -- 傳送到 Lobby.Teleport1
                    local teleport1 = Workspace.Lobby:FindFirstChild("Teleport1")
                    if teleport1 and isHelpModeEnabled then
                        humanoidRootPart.CFrame = teleport1.CFrame
                        task.wait(0.3)
                    end
                    
                    -- 持續跟隨目標玩家
                    local targetPlayer = Players:FindFirstChild(targetName)
                    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") and isHelpModeEnabled then
                        local playerWorkspaceFolder = Workspace:FindFirstChild(LocalPlayer.Name)
                        local lastUpdateTime = tick()
                        
                        -- 持續移動直到檢測到LastSlappedBy
                        while isHelpModeEnabled and character.Parent and humanoid.Health > 0 and playerWorkspaceFolder do
                            
                            -- 檢查是否被目標玩家打中
                            local lastSlappedBy = playerWorkspaceFolder:FindFirstChild("LastSlappedBy")
                            if lastSlappedBy and lastSlappedBy.Value == targetName then
                                task.wait(0.5)
                                
                                if helpMode == "被打後重置" then
                                    -- 安全傳送到指定坐標
                                    pcall(function()
                                        if humanoidRootPart and humanoidRootPart.Parent then
                                            humanoidRootPart.CFrame = CFrame.new(263, 13, 197)
                                        end
                                    end)
                                    
                                    task.wait(0.2)
                                    
                                    -- 安全重置
                                    pcall(function()
                                        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                                            LocalPlayer.Character.Humanoid:TakeDamage(LocalPlayer.Character.Humanoid.MaxHealth)
                                        end
                                    end)
                                    
                                    -- 等待重置完成和新角色載入
                                    local resetStartTime = tick()
                                    repeat
                                        task.wait(0.2)
                                        if tick() - resetStartTime > 3 then
                                            break
                                        end
                                    until not LocalPlayer.Character or LocalPlayer.Character.Humanoid.Health <= 0
                                    
                                    -- 等待新角色
                                    local newCharacter = nil
                                    local waitStartTime = tick()
                                    repeat
                                        task.wait(0.2)
                                        newCharacter = LocalPlayer.Character
                                        if tick() - waitStartTime > 3 then
                                            break
                                        end
                                    until newCharacter and newCharacter:FindFirstChild("HumanoidRootPart") and 
                                          newCharacter:FindFirstChild("Humanoid") and newCharacter.Humanoid.Health > 0
                                    
                                    -- 傳送到紅門並等待0.5秒
                                    pcall(function()
                                        local teleport1 = Workspace.Lobby:FindFirstChild("Teleport1")
                                        if teleport1 and newCharacter and newCharacter:FindFirstChild("HumanoidRootPart") then
                                            newCharacter.HumanoidRootPart.CFrame = teleport1.CFrame
                                            task.wait(0.5)
                                        end
                                    end)
                                    
                                    -- 移動到目標玩家面向方向5單位
                                    pcall(function()
                                        if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") and 
                                           newCharacter and newCharacter:FindFirstChild("HumanoidRootPart") then
                                            local targetRoot = targetPlayer.Character.HumanoidRootPart
                                            local targetLookDirection = targetRoot.CFrame.LookVector
                                            local newPos = targetRoot.Position + (targetLookDirection * 5) + Vector3.new(0, 0, 0)
                                            newCharacter.HumanoidRootPart.CFrame = CFrame.new(newPos, newPos + targetLookDirection)
                                        end
                                    end)
                                    
                                    task.wait(0.3)
                                    break
                                else
                                    -- 不重置模式 - 每0.5秒移動到目標玩家前方5單位
                                    isMovingLocked = true
                                    
                                    -- 持續跟隨目標玩家直到功能關閉
                                    while isHelpModeEnabled and isMovingLocked do
                                        pcall(function()
                                            if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                                                local targetRoot = targetPlayer.Character.HumanoidRootPart
                                                local targetPos = targetRoot.Position
                                                local targetLookDirection = targetRoot.CFrame.LookVector
                                                
                                                local newPos = targetPos + (targetLookDirection * 5) + Vector3.new(0, 0, 0)
                                                
                                                if humanoidRootPart and humanoidRootPart.Parent then
                                                    humanoidRootPart.CFrame = CFrame.new(newPos, newPos + targetLookDirection)
                                                end
                                            end
                                        end)
                                        task.wait(0.5)
                                    end
                                    break
                                end
                            end
                            
                            local currentTime = tick()
                            if currentTime - lastUpdateTime < 0.2 then
                                task.wait(0.1)
                                continue
                            end
                            lastUpdateTime = currentTime
                            
                            if not (targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")) then
                                break
                            end
                            
                            -- 持續移動到目標前方
                            pcall(function()
                                local targetRoot = targetPlayer.Character.HumanoidRootPart
                                local targetPos = targetRoot.Position
                                local targetLookDirection = targetRoot.CFrame.LookVector
                                
                                local newPos = targetPos + (targetLookDirection * 5) + Vector3.new(0, 0, 0)
                                
                                if (humanoidRootPart.Position - newPos).Magnitude > 1 then
                                    humanoidRootPart.CFrame = CFrame.new(newPos, newPos + targetLookDirection)
                                end
                            end)
                            
                            task.wait(0.1)
                        end
                    end
                end)
                
                if isHelpModeEnabled then
                    task.wait(1)
                end
            end
        end)
    elseif helpModeLoop then
        task.cancel(helpModeLoop)
        helpModeLoop = nil
        isMovingLocked = false -- 解除位置鎖定
    end
end)
